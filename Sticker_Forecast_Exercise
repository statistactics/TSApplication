{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":85723,"databundleVersionId":10652996,"sourceType":"competition"}],"dockerImageVersionId":30822,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-01-05T13:33:51.775934Z","iopub.execute_input":"2025-01-05T13:33:51.776324Z","iopub.status.idle":"2025-01-05T13:33:52.191521Z","shell.execute_reply.started":"2025-01-05T13:33:51.776292Z","shell.execute_reply":"2025-01-05T13:33:52.190296Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/playground-series-s5e1/sample_submission.csv\n/kaggle/input/playground-series-s5e1/train.csv\n/kaggle/input/playground-series-s5e1/test.csv\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"train_df = pd.read_csv(\"/kaggle/input/playground-series-s5e1/train.csv\")\ntrain_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-05T13:35:35.890936Z","iopub.execute_input":"2025-01-05T13:35:35.891335Z","iopub.status.idle":"2025-01-05T13:35:36.342180Z","shell.execute_reply.started":"2025-01-05T13:35:35.891303Z","shell.execute_reply":"2025-01-05T13:35:36.340893Z"}},"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"            id        date    country                 store  \\\n0            0  2010-01-01     Canada     Discount Stickers   \n1            1  2010-01-01     Canada     Discount Stickers   \n2            2  2010-01-01     Canada     Discount Stickers   \n3            3  2010-01-01     Canada     Discount Stickers   \n4            4  2010-01-01     Canada     Discount Stickers   \n...        ...         ...        ...                   ...   \n230125  230125  2016-12-31  Singapore  Premium Sticker Mart   \n230126  230126  2016-12-31  Singapore  Premium Sticker Mart   \n230127  230127  2016-12-31  Singapore  Premium Sticker Mart   \n230128  230128  2016-12-31  Singapore  Premium Sticker Mart   \n230129  230129  2016-12-31  Singapore  Premium Sticker Mart   \n\n                   product  num_sold  \n0        Holographic Goose       NaN  \n1                   Kaggle     973.0  \n2             Kaggle Tiers     906.0  \n3                 Kerneler     423.0  \n4       Kerneler Dark Mode     491.0  \n...                    ...       ...  \n230125   Holographic Goose     466.0  \n230126              Kaggle    2907.0  \n230127        Kaggle Tiers    2299.0  \n230128            Kerneler    1242.0  \n230129  Kerneler Dark Mode    1622.0  \n\n[230130 rows x 6 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>date</th>\n      <th>country</th>\n      <th>store</th>\n      <th>product</th>\n      <th>num_sold</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>2010-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Holographic Goose</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>2010-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Kaggle</td>\n      <td>973.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>2010-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Kaggle Tiers</td>\n      <td>906.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>2010-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Kerneler</td>\n      <td>423.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>2010-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Kerneler Dark Mode</td>\n      <td>491.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>230125</th>\n      <td>230125</td>\n      <td>2016-12-31</td>\n      <td>Singapore</td>\n      <td>Premium Sticker Mart</td>\n      <td>Holographic Goose</td>\n      <td>466.0</td>\n    </tr>\n    <tr>\n      <th>230126</th>\n      <td>230126</td>\n      <td>2016-12-31</td>\n      <td>Singapore</td>\n      <td>Premium Sticker Mart</td>\n      <td>Kaggle</td>\n      <td>2907.0</td>\n    </tr>\n    <tr>\n      <th>230127</th>\n      <td>230127</td>\n      <td>2016-12-31</td>\n      <td>Singapore</td>\n      <td>Premium Sticker Mart</td>\n      <td>Kaggle Tiers</td>\n      <td>2299.0</td>\n    </tr>\n    <tr>\n      <th>230128</th>\n      <td>230128</td>\n      <td>2016-12-31</td>\n      <td>Singapore</td>\n      <td>Premium Sticker Mart</td>\n      <td>Kerneler</td>\n      <td>1242.0</td>\n    </tr>\n    <tr>\n      <th>230129</th>\n      <td>230129</td>\n      <td>2016-12-31</td>\n      <td>Singapore</td>\n      <td>Premium Sticker Mart</td>\n      <td>Kerneler Dark Mode</td>\n      <td>1622.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>230130 rows Ã— 6 columns</p>\n</div>"},"metadata":{}}],"execution_count":3},{"cell_type":"code","source":"train_df.dtypes","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-05T13:35:44.458131Z","iopub.execute_input":"2025-01-05T13:35:44.458481Z","iopub.status.idle":"2025-01-05T13:35:44.466201Z","shell.execute_reply.started":"2025-01-05T13:35:44.458452Z","shell.execute_reply":"2025-01-05T13:35:44.465064Z"}},"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"id            int64\ndate         object\ncountry      object\nstore        object\nproduct      object\nnum_sold    float64\ndtype: object"},"metadata":{}}],"execution_count":4},{"cell_type":"code","source":"import ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-05T13:36:38.770493Z","iopub.execute_input":"2025-01-05T13:36:38.770918Z","iopub.status.idle":"2025-01-05T13:36:38.783186Z","shell.execute_reply.started":"2025-01-05T13:36:38.770881Z","shell.execute_reply":"2025-01-05T13:36:38.781960Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-05a8cb49cc0d>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mpyro\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'pyro'"],"ename":"ModuleNotFoundError","evalue":"No module named 'pyro'","output_type":"error"}],"execution_count":5},{"cell_type":"markdown","source":"# EDA and Visualization","metadata":{}},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Feature Eng","metadata":{}},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Model Testing: ","metadata":{}},{"cell_type":"markdown","source":"## Bayesian/Probabilistic","metadata":{}},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}